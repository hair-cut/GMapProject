# .github/workflows/node.js.yml

name: Deploy Vue App to Firebase Hosting

on:
  push:
    branches: [ "main" ] # main 브랜치에 푸시될 때 워크플로우 실행

env:
  # Vue 앱 빌드 시 필요한 환경 변수들 (GitHub Secrets에서 불러옴)
  # 이 변수들은 Vue 앱의 클라이언트 측 코드에 주입됩니다.
  VUE_APP_GOOGLE_MAP_API_KEY: ${{ secrets.VUE_APP_GOOGLE_MAP_API_KEY }}
  VUE_APP_GOOGLE_MAP_ID: ${{ secrets.VUE_APP_GOOGLE_MAP_ID }}
  VUE_APP_FIREBASE_API_KEY: ${{ secrets.VUE_APP_FIREBASE_API_KEY }}
  VUE_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.VUE_APP_FIREBASE_AUTH_DOMAIN }}
  VUE_APP_FIREBASE_PROJECT_ID: ${{ secrets.VUE_APP_FIREBASE_PROJECT_ID }}
  VUE_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.VUE_APP_FIREBASE_STORAGE_BUCKET }}
  VUE_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VUE_APP_FIREBASE_MESSAGING_SENDER_ID }}
  VUE_APP_FIREBASE_APP_ID: ${{ secrets.VUE_APP_FIREBASE_APP_ID }}
  VUE_APP_FIREBASE_MEASUREMENT_ID: ${{ secrets.VUE_APP_FIREBASE_MEASUREMENT_ID }}
  VUE_APP_FIREBASE_DEMO_ACCOUNT: ${{ secrets.VUE_APP_FIREBASE_DEMO_ACCOUNT }}
  VUE_APP_FIREBASE_DEMO_PASSWORD: ${{ secrets.VUE_APP_FIREBASE_DEMO_PASSWORD }}
  VUE_APP_API_BASE_URL: ${{ secrets.VUE_APP_API_BASE_URL }}

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x' # Node.js 버전, 프로젝트에 맞게 변경하세요.
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Build Vue application
      # 이 명령이 'dist' 폴더를 생성합니다.
      run: npm run build

    - name: Install Firebase CLI
      run: npm install -g firebase-tools

    - name: Deploy to Firebase Hosting
      # --only hosting: App Hosting이 아닌 Firebase Hosting에만 배포
      # --project YOUR_FIREBASE_PROJECT_ID: 배포할 Firebase 프로젝트 지정
      # --token "${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}": GitHub Secrets의 키 사용
      run: firebase deploy --only hosting --project gmapproject-2ea97 --token "${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}"